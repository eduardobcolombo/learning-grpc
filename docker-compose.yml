version: '3'

services:

  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
      target: server
    environment:
      - GRPC_HOST=$GRPC_HOST
      - GRPC_PORT=$GRPC_PORT
      - DB_HOST=$DB_HOST
      - DB_PASSWORD=$DB_PASSWORD
      - DB_USER=$DB_USER
      - DB_NAME=$DB_NAME
      - DB_PORT=$DB_PORT
    ports: 
      - "50053:50053"      

    # deploy:
    #   resources:
    #     limits:
    #       memory: 200M
    #     reservations:
    #       memory: 20M
    depends_on:
      - db
    restart: on-failure      
    networks: 
      - grpc-network

  client:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.client
      target: client
    environment: 
      GRPC_HOST: $GRPC_HOST
      GRPC_PORT: $GRPC_PORT
      API_PORT: $API_PORT
    volumes:
      - ./data:/data
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 20M
    depends_on: 
      - server
    restart: on-failure      
    ports: 
      - "8888:8888"
    networks: 
      - grpc-network

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    ports:
      - "5432:5432"
    networks: 
      - grpc-network     

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: we@can.do.it
      PGADMIN_DEFAULT_PASSWORD: we
      PGADMIN_LISTEN_PORT: 80
    ports:
    - "8080:80"    
    networks: 
      - grpc-network     
 
volumes:
  data:

networks: 
  grpc-network:
    driver: bridge